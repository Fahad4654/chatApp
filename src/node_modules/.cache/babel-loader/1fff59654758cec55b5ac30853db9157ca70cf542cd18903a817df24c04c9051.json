{"ast":null,"code":"var _jsxFileName = \"/home/fahad/Music/my_project/chat/react-firebase-chat/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\n// src/components/ChatRoom.js\nimport React, { useState, useEffect } from 'react';\nimport { firestore } from '../firebase';\nimport { collection, addDoc, serverTimestamp, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport SearchUser from './SearchUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  user\n}) => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null); // State to track selected user\n\n  useEffect(() => {\n    const chatsCollection = collection(firestore, 'chats');\n    const q = query(chatsCollection, orderBy('timestamp'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setChats(snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })));\n    });\n    return unsubscribe;\n  }, []);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (newMessage.trim() === '' || !selectedUser) return; // Check if a user is selected\n\n    await addDoc(collection(firestore, 'chats'), {\n      text: newMessage,\n      senderId: user.uid,\n      senderName: user.displayName,\n      receiverId: selectedUser.uid,\n      receiverName: selectedUser.displayName,\n      timestamp: serverTimestamp()\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchUser, {\n      onSelectUser: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \" \", selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Chatting with \", selectedUser.displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chats.filter(chat => chat.senderId === user.uid && chat.receiverId === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.uid) || chat.senderId === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.uid) && chat.receiverId === user.uid) // Filter messages between current user and selected user\n        .map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${chat.senderId === user.uid ? 'sent' : 'received'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: chat.senderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), \": \", chat.text]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input\",\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"tQAOovlA+POR/i+T24fNDlNIV7Q=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","firestore","collection","addDoc","serverTimestamp","query","orderBy","onSnapshot","SearchUser","jsxDEV","_jsxDEV","ChatRoom","user","_s","chats","setChats","newMessage","setNewMessage","selectedUser","setSelectedUser","chatsCollection","q","unsubscribe","snapshot","docs","map","doc","id","data","sendMessage","e","preventDefault","trim","text","senderId","uid","senderName","displayName","receiverId","receiverName","timestamp","className","children","onSelectUser","fileName","_jsxFileName","lineNumber","columnNumber","filter","chat","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["/home/fahad/Music/my_project/chat/react-firebase-chat/src/components/ChatRoom.js"],"sourcesContent":["// src/components/ChatRoom.js\nimport React, { useState, useEffect } from 'react';\nimport { firestore } from '../firebase';\nimport { collection, addDoc, serverTimestamp, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport SearchUser from './SearchUser';\n\nconst ChatRoom = ({ user }) => {\n  const [chats, setChats] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null); // State to track selected user\n\n  useEffect(() => {\n    const chatsCollection = collection(firestore, 'chats');\n    const q = query(chatsCollection, orderBy('timestamp'));\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      setChats(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (newMessage.trim() === '' || !selectedUser) return; // Check if a user is selected\n\n    await addDoc(collection(firestore, 'chats'), {\n      text: newMessage,\n      senderId: user.uid,\n      senderName: user.displayName,\n      receiverId: selectedUser.uid,\n      receiverName: selectedUser.displayName,\n      timestamp: serverTimestamp(),\n    });\n\n    setNewMessage('');\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <SearchUser onSelectUser={setSelectedUser} /> {/* Pass the setSelectedUser to handle user selection */}\n      {selectedUser && <div>Chatting with {selectedUser.displayName}</div>}\n      <div className=\"chat-window\">\n        <div className=\"chat-header\">Chat Room</div>\n        <div className=\"chat-messages\">\n          {chats\n            .filter(chat => (chat.senderId === user.uid && chat.receiverId === selectedUser?.uid) || \n                            (chat.senderId === selectedUser?.uid && chat.receiverId === user.uid)) // Filter messages between current user and selected user\n            .map(chat => (\n              <div\n                key={chat.id}\n                className={`message ${chat.senderId === user.uid ? 'sent' : 'received'}`}\n              >\n                <strong>{chat.senderName}</strong>: {chat.text}\n              </div>\n          ))}\n        </div>\n        <form className=\"chat-input\" onSubmit={sendMessage}>\n          <input\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            placeholder=\"Type a message...\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatRoom;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AACpG,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMoB,eAAe,GAAGlB,UAAU,CAACD,SAAS,EAAE,OAAO,CAAC;IACtD,MAAMoB,CAAC,GAAGhB,KAAK,CAACe,eAAe,EAAEd,OAAO,CAAC,WAAW,CAAC,CAAC;IAEtD,MAAMgB,WAAW,GAAGf,UAAU,CAACc,CAAC,EAAGE,QAAQ,IAAK;MAC9CR,QAAQ,CAACQ,QAAQ,CAACC,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;QAAE,GAAGD,GAAG,CAACE,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC;IAEF,OAAON,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIf,UAAU,CAACgB,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAACd,YAAY,EAAE,OAAO,CAAC;;IAEvD,MAAMf,MAAM,CAACD,UAAU,CAACD,SAAS,EAAE,OAAO,CAAC,EAAE;MAC3CgC,IAAI,EAAEjB,UAAU;MAChBkB,QAAQ,EAAEtB,IAAI,CAACuB,GAAG;MAClBC,UAAU,EAAExB,IAAI,CAACyB,WAAW;MAC5BC,UAAU,EAAEpB,YAAY,CAACiB,GAAG;MAC5BI,YAAY,EAAErB,YAAY,CAACmB,WAAW;MACtCG,SAAS,EAAEpC,eAAe,CAAC;IAC7B,CAAC,CAAC;IAEFa,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEP,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhC,OAAA,CAACF,UAAU;MAACmC,YAAY,EAAExB;IAAgB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,EAC7C7B,YAAY,iBAAIR,OAAA;MAAAgC,QAAA,GAAK,gBAAc,EAACxB,YAAY,CAACmB,WAAW;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpErC,OAAA;MAAK+B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BhC,OAAA;QAAK+B,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5CrC,OAAA;QAAK+B,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3B5B,KAAK,CACHkC,MAAM,CAACC,IAAI,IAAKA,IAAI,CAACf,QAAQ,KAAKtB,IAAI,CAACuB,GAAG,IAAIc,IAAI,CAACX,UAAU,MAAKpB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiB,GAAG,KACnEc,IAAI,CAACf,QAAQ,MAAKhB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiB,GAAG,KAAIc,IAAI,CAACX,UAAU,KAAK1B,IAAI,CAACuB,GAAI,CAAC,CAAC;QAAA,CACtFV,GAAG,CAACwB,IAAI,iBACPvC,OAAA;UAEE+B,SAAS,EAAE,WAAWQ,IAAI,CAACf,QAAQ,KAAKtB,IAAI,CAACuB,GAAG,GAAG,MAAM,GAAG,UAAU,EAAG;UAAAO,QAAA,gBAEzEhC,OAAA;YAAAgC,QAAA,EAASO,IAAI,CAACb;UAAU;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACE,IAAI,CAAChB,IAAI;QAAA,GAHzCgB,IAAI,CAACtB,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIT,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrC,OAAA;QAAM+B,SAAS,EAAC,YAAY;QAACS,QAAQ,EAAErB,WAAY;QAAAa,QAAA,gBACjDhC,OAAA;UACEyC,KAAK,EAAEnC,UAAW;UAClBoC,QAAQ,EAAGtB,CAAC,IAAKb,aAAa,CAACa,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UAC/CG,WAAW,EAAC;QAAmB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACFrC,OAAA;UAAQ6C,IAAI,EAAC,QAAQ;UAAAb,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CA9DIF,QAAQ;AAAA6C,EAAA,GAAR7C,QAAQ;AAgEd,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}